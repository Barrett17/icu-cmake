--- icu/source/icudefs.mk.in.orig
+++ icu/source/icudefs.mk.in
@@ -198,8 +198,8 @@
 LDLIBRARYPATH_ENVVAR = LD_LIBRARY_PATH
 
 # Versioned target for a shared library.
-FINAL_SO_TARGET = $(SO_TARGET).$(SO_TARGET_VERSION)
-MIDDLE_SO_TARGET = $(SO_TARGET).$(SO_TARGET_VERSION_MAJOR)
+FINAL_SO_TARGET = $(SO_TARGET)
+MIDDLE_SO_TARGET = $(SO_TARGET)
 SHARED_OBJECT = $(FINAL_SO_TARGET)
 
 ##  How ICU libraries are named...  ex. $(LIBICU)uc$(SO)

--- icu/source/data/Makefile.in.orig
+++ icu/source/data/Makefile.in
@@ -26,9 +26,9 @@
 ifeq ($(PKGDATA_OPTS),)
 PKGDATA_OPTS = -O $(top_builddir)/data/icupkg.inc
 endif
-ifeq ($(PKGDATA_VERSIONING),)
-PKGDATA_VERSIONING = -r $(SO_TARGET_VERSION)
-endif
+#ifeq ($(PKGDATA_VERSIONING),)
+#PKGDATA_VERSIONING = -r $(SO_TARGET_VERSION)
+#endif
 
 # This allows all the data to be in one directory
 ifeq ($(PKGDATA_MODE),dll)

--- icu/source/tools/pkgdata/pkgdata.cpp.orig
+++ icu/source/tools/pkgdata/pkgdata.cpp
@@ -897,7 +897,7 @@
  */
 static void createFileNames(UPKGOptions *o, const char mode, const char *version_major, const char *version, const char *libName, UBool reverseExt, UBool noVersion) {
     const char* FILE_EXTENSION_SEP = uprv_strlen(pkgDataFlags[SO_EXT]) == 0 ? "" : ".";
-    const char* FILE_SUFFIX = pkgDataFlags[LIB_EXT_ORDER][0] == '.' ? "." : "";
+    const char* FILE_SUFFIX = ".";
 
 #if U_PLATFORM == U_PF_MINGW
         /* MinGW does not need the library prefix when building in dll mode. */
